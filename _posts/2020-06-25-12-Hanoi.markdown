---
layout: post
title:  "Hanoi"
date:   2020-06-25 04:04:34 -0400
categories: jekyll update
---

**I've been reading [Algorithms][algorithms] by Jeff Erickson and one of the very first ones that he talks about is the Tower of Hanoi algorithm. He covers this cool 
story from N. Claus (de Siam) below which I thought was cool.** 

*In the great temple at Benares. . . beneath the dome which marks the centre of
the world, rests a brass plate in which are fixed three diamond needles, each
a cubit high and as thick as the body of a bee. On one of these needles, at the
creation, God placed sixty-four discs of pure gold, the largest disc resting on the
brass plate, and the others getting smaller and smaller up to the top one. This is
the Tower of Bramah. Day and night unceasingly the priests transfer the discs
from one diamond needle to another according to the fixed and immutable
laws of Bramah, which require that the priest on duty must not move more
than one disc at a time and that he must place this disc on a needle so that
there is no smaller disc below it. When the sixty-four discs shall have been thus
transferred from the needle on which at the creation God placed them to one
of the other needles, tower, temple, and Brahmins alike will crumble into dust,
and with a thunderclap the world will vanish.*

**The coolest part of the story was how long it would take to move all 64 discs from one pile to the next.**

*In particular, moving a tower of 64 disks requires 2**64 - 1 =
 18,446,744,073,709,551,615 individual moves. Thus, even at the impressive rate
of one move per second, the monks at Benares will be at work for approximately
 billion years*

**I wrote the solutions to the problem in python and rust.** 

{% highlight python %}
def hanoi(discs, src, tmp, dest):
    if discs == 1:
       print ('Move disc 1 from peg {} to peg {}.'.format(src, dest) )
       return
    
    hanoi(discs - 1, src, dest, tmp)
    print ('Move disc {} from peg {} to peg {}.'.format(discs, src, dest) )  
    hanoi(discs - 1, tmp, src, dest)

    
discs = int(input('Enter the number of discs: '))
hanoi(discs, 'A', 'B', 'C')
{% endhighlight %}

{% highlight rust %}
use std::io;

fn main() {

    println!("Please input the number of discs:");

    let mut discs = String::new();

    io::stdin().read_line(&mut discs)
        .expect("Failed to read line");

    let discs: u32 = discs.trim().parse().expect("Please type a number!");

    println!("You entered: {} discs", discs);

   hanoi(discs, "A", "B", "C");
}

fn hanoi(discs: u32, src: &str, tmp: &str, dest: &str) {
    
    
    if discs == 1 {
        println!("Move disc 1 from peg {} to peg {}",src, dest);
        return;
    }
    hanoi(discs -1, src, dest, tmp);
    println!("Move disc {} from peg {} to peg {}", discs, src, dest);
    hanoi(discs -1, tmp, src, dest);

}
{% endhighlight %}

[Algorithms]: https://jeffe.cs.illinois.edu/teaching/algorithms/
